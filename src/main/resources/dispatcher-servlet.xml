<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation=
           "http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
            http://www.springframework.org/schema/mvc     http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    <!-- 对base-package包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能,use-default-filters=false 禁止注册@Controller,@Component,@Service,@Repository -->
    <context:component-scan base-package="org.wjh" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- 注解支持的mvc -->
    <mvc:annotation-driven/>
    <!--拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**/*.do"/>
            <mvc:exclude-mapping path="/dd"/>
            <bean class="org.wjh.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
    <!--异常处理器,由于异常处理器应该只属于mvc这个子容器，但是mvc只包含Controller注解，所以此处在xml中配置，只要子容器托管，不用Component注解-->
    <bean class="org.wjh.common.HelloHandlerExceptionResolver"/>
    <!--文件解析器,id必须是multipartResolver，需要依赖commons-fileupload，但是没有自动导入，需要手动配置pom引入,否则项目无法启用-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <property name="maxUploadSize" value="52428800"/>
        <property name="maxInMemorySize" value="2048000"/>
        <property name="resolveLazily" value="true"/>
    </bean>
</beans>